creditscore:

import pandas as pd
import numpy as np
import plotly.express as px
import plotly.graph_objects as go
import plotly.io as pio
pio.templates.default = "plotly_white"

data = pd.read_csv("CREDITSCORE.csv")
print(data.head())
print(data.info())
print(data.isnull().sum())
data["Credit_Score"].value_counts()
fig = px.box(data, 
             x="Occupation",  
             color="Credit_Score", 
             title="Credit Scores Based on Occupation", 
             color_discrete_map={Poor':'red',
                                 'Standard':'yellow',
                                 'Good':'green'})
fig.show()

10.iris flower class:

import pandas as pd
import matplotlib.pyplot as plt
import numpy as np
iris = pd.read_csv("IRIS.csv")

# Dataset Exploration
print(iris.head()) 
print()
print(iris.describe())

# Identifying the unique values of the result.
print("Target Labels", iris["species"].unique())

import plotly.io as io
import plotly.express as px
fig = px.scatter(iris, x="sepal_width", y="sepal_length", color="species")
fig.show()

#Seggregating dataset 
x = iris.drop("species", axis=1)
y = iris["species"]
from sklearn.model_selection import train_test_split
x_train, x_test, y_train, y_test = train_test_split(x, y,test_size=0.2,random_state=0)

from sklearn.neighbors import KNeighborsClassifier
knn = KNeighborsClassifier(n_neighbors=1)
knn.fit(x_train, y_train)

x_new = np.array([[6, 2.9, 1, 0.2]])
prediction = knn.predict(x_new)
print("Prediction: {}".format(prediction))

11.carpred:

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeRegressor

data = pd.read_csv("CarPrice.csv")
data.head()
data.isnull().sum()
data.info()
print(data.describe())
data.CarName.unique()
sns.set_style("whitegrid")
plt.figure(figsize=(15, 10))
sns.displot(data.price)
plt.show()
